"use strict";angular.module("myApp").service("gameLogic",function(){function a(a,b){return angular.equals(a,b)}function b(){for(var a=s,b=s,c=[],d=[];b--;)d.push("");for(;a--;)c.push(d.slice());return c}function c(){return b()}function d(a){return JSON.parse(JSON.stringify(a))}function e(a,c,d,e){function f(b,c){g.push([b,c]),h[b][c]=a,b-1>=0&&""===h[b-1][c]&&e[b-1][c]===a&&f(b-1,c),s>b+1&&""===h[b+1][c]&&e[b+1][c]===a&&f(b+1,c),s>c+1&&""===h[b][c+1]&&e[b][c+1]===a&&f(b,c+1),c-1>=0&&""===h[b][c-1]&&e[b][c-1]===a&&f(b,c-1)}var g=[],h=b();return f(c,d),{willadd:g,links:h}}function f(a,b){var c,e,f=d(a);for(c=0;s>c;c++)for(e=0;s>e;e++)""!==b[c][e]&&(f[c][e]=b[c][e]);return f}function g(a){var c,g,h,i=b(),j=b(),k=[],l=[];for(c=0;s>c;c++)for(g=0;s>g;g++)"X"===a[c][g]&&""===i[c][g]?(h=e("X",c,g,a),k.push(d(h.willadd)),i=f(i,h.links)):"O"===a[c][g]&&""===j[c][g]&&(h=e("O",c,g,a),l.push(d(h.willadd)),j=f(j,h.links));return{black:k,white:l}}function h(a,b){var c,e,f,g=d(a);for(c=0;c<b.length;c++)e=b[c][0],f=b[c][1],g[e][f]="";return g}function i(a,b){var c,e,f,g=0,i=d(a),j=0;for(e=0;e<b.length;e++){for(j=0,c=b[e],f=0;f<c.length;f++){var k=c[f][0],l=c[f][1];if(k-1>=0&&""===a[k-1][l]||s>k+1&&""===a[k+1][l]||l-1>=0&&""===a[k][l-1]||s>l+1&&""===a[k][l+1]){j++;break}}0===j&&(g+=c.length,i=h(i,c))}return{board:i,captured:g}}function j(a,b,c){var e,f=d(b),h=d(a),j=g(a),k=j.black,l=j.white;return 0===c&&(e=i(h,l),f.white=b.white+e.captured,h=d(e.board)),e=i(h,k),f.black=b.black+e.captured,h=d(e.board),1===c&&(e=i(h,l),f.white=b.white+e.captured,h=d(e.board)),{board:h,captured:f}}function k(a){var b="O";return a.black-a.white===0?b="":a.white>a.black&&(b="X"),b}function l(a,b,c,d,e){var f,g,h,i,j,k=[];for(f=0;s>f;f++)for(g=0;s>g;g++){h={row:f,col:g};try{if(i=n(a,b,h,c,d,e),j=i[3].set.value,0===e&&j.white>c.white||1===e&&j.black>c.black)return i;0===e&&j.black>c.black||1===e&&j.white>c.white||k.push(i)}catch(l){}}try{h={row:-1,col:-1},i=n(a,b,h,c,d,e),k.push(i)}catch(l){}var m=k[Math.floor(Math.random()*k.length)];return m}function m(a,b){var c,d,e=0,f=b?"O":"X";for(c=0;s>c;c++)for(d=0;s>d;d++)a[c][d]===f&&e++;return e}function n(a,c,e,f,g,h){void 0===f&&(f={black:0,white:0}),void 0===g&&(g=0),void 0===c&&(c=b()),void 0===a&&(a=b());var i,l;i=m(c,h);var n=d(c),o=g,p=d(f),q=e.row,r=e.col;if(-1===q&&-1===r){if(o++,o>2)throw Error("Exceeded number of possible passes.")}else{if(""!==n[q][r])throw Error("Space is not empty!");n[q][r]=0===h?"X":"O",o=0;var s=j(n,f,h);n=s.board,p=s.captured}if(l=m(n,h),i>l)throw Error("you can not suicide.");if(angular.equals(a,n)&&0===g)throw Error("donâ€™t allow a move that brings the game back to stateBeforeMove.");var t;if(2===o){var u=k(p);t={endMatch:{endMatchScores:"X"===u?[1,0]:"O"===u?[0,1]:[0,0]}}}else t={setTurn:{turnIndex:1-h}};return[t,{set:{key:"board",value:n}},{set:{key:"delta",value:e}},{set:{key:"captured",value:p}},{set:{key:"passes",value:o}}]}function o(b){var c=b.move,d=b.turnIndexBeforeMove,e=b.stateBeforeMove;try{var f=c[2].set.value,g=n(e.boardbeforeMove,e.board,f,e.captured,e.passes,d);if(!a(c,g))return!1}catch(h){return!1}return!0}function p(a,b,c){for(var d=[],e=b,f=a,g=0;g<c.length;g++){var h=c[g],i=n(e.boardbeforeMove,e.board,h,e.captured,e.passes,f),j={board:i[1].set.value,delta:i[2].set.value,captured:i[3].set.value,passes:i[4].set.value};d.push({stateBeforeMove:e,stateAfterMove:j,turnIndexBeforeMove:f,turnIndexAfterMove:1-f,move:i,comment:{end:h.comment}}),e=j,f=1-f}return d}function q(){return p(0,{},[{row:0,col:0,comment:"Black always starts. Starting at the corner is not usually a good idea because you have only 2 liberties available."},{row:0,col:1,comment:"White places a stone next to black. Black still has one liberty at [1,0] so it is not captured."},{row:1,col:1,comment:"Black now covers 2 of the white stone's liberties. The white stone still has one liberty at [0,2]."},{row:1,col:2,comment:"White makes a poor move."},{row:0,col:2,comment:"Black captures White's first stone by covering all its possible liberties."},{row:-1,col:-1,comment:"White passes its turn by not playing. However, 2 consecutive passes are required to end a game."},{row:2,col:2,comment:"Black can play anyway and continue the game."},{row:-1,col:-1,comment:"White passes its turn again by not playing."},{row:-1,col:-1,comment:"Black agrees to end the game by passing its turn."}])}function r(){var a=b();a[1]="O",a[1]=["X","X","O","X","","","","",""],a[2]=["","O","X","O","","","","",""];var c=b();return c[1]="O",c[1]=["O","X","O","","","","","",""],c[2]=["O","X","O","","","","","",""],[p(0,{board:a,delta:{row:2,col:3},captured:{black:0,white:0},passes:0},[{row:0,col:2,comment:"Find the position for Black that will capture a white piece."}]),p(0,{board:c,delta:{row:2,col:2},captured:{black:0,white:0},passes:0},[{row:3,col:1,comment:"Find the position for Black that will prevent white from capturing it in its next move."}])]}var s=9;"?boardSize=9"===window.location.search&&(s=9),"?boardSize=19"===window.location.search&&(s=19),"?boardSize=13"===window.location.search&&(s=13),this.isMoveOk=o,this.getExampleGame=q,this.getRiddles=r,this.getInitialBoard=c,this.createMove=n,this.createComputerMove=l,this.getSets=g}),angular.module("myApp",["ngDraggable"]).controller("Ctrl",function(a,b,c,d,e,f,g){function h(a,c,d){var e=document.getElementById("draggingLines"),f=document.getElementById("horizontalDraggingLine"),g=document.getElementById("verticalDraggingLine"),h=document.getElementById("gameArea"),j=document.getElementById("boardArea"),m=c-h.offsetLeft,n=d-h.offsetTop,o=document.getElementById("button");if(console.log(o),m>o.offsetLeft&&m<o.offsetLeft+o.clientWidth&&n>o.offsetTop&&n<o.offsetTop+o.clientHeight)return void(("touchend"===a||"touchcancel"===a||"touchleave"===a||"mouseup"===a)&&b.passClicked());if(0>m||m>=h.clientWidth||0>n||n>=j.clientHeight)return e.style.displagy="none",void(clickToDragPiece.style.display="none");var p=Math.floor(r*m/j.clientWidth),s=Math.floor(q*n/j.clientHeight);if("X"!==b.board[s][p]&&"O"!==b.board[s][p]){clickToDragPiece.style.display="inline",e.style.display="inline";var t=k(s,p);g.setAttribute("x1",t.x),g.setAttribute("x2",t.x),f.setAttribute("y1",t.y),f.setAttribute("y2",t.y);var u=i(s,p),v=document.getElementById("circle");v.setAttribute("fill",0===b.turnIndex?"black":"white"),clickToDragPiece.style.left=u.left+"px",clickToDragPiece.style.top=u.top+"px",("touchend"===a||"touchcancel"===a||"touchleave"===a||"mouseup"===a)&&(clickToDragPiece.style.display="none",e.style.display="none",l(s,p))}}function i(a,b){var c=j();return{top:a*c.height,left:b*c.width}}function j(){var a=document.getElementById("boardArea");return{width:a.clientWidth/r,height:a.clientHeight/q}}function k(a,b){var c=j();return{x:b*c.width+c.width/2,y:a*c.height+c.height/2}}function l(d,e){a.$apply(function(){var a="Dragged to "+d+"x"+e;c.info(a),b.msg=a,o(d,e)})}function m(){e.makeMove(f.createComputerMove(b.boardbeforeMove,b.board,b.captured,b.passes,b.turnIndex))}function n(a){b.jsonState=angular.toJson(a.stateAfterMove,!0),b.board=a.stateAfterMove.board,b.delta=a.stateAfterMove.delta,b.captured=a.stateAfterMove.captured,b.passes=a.stateAfterMove.passes,void 0===b.board||void 0===b.captured||void 0===b.passes?(b.board=f.getInitialBoard(),b.captured={black:0,white:0},b.passes=0,b.notifications="Nothing was dragged"):p.play(),b.isYourTurn=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,b.turnIndex=a.turnIndexAfterMove,b.isYourTurn&&""===a.playersInfo[a.yourPlayerIndex].playerId&&d(m,1e3)}function o(a,d){if(c.info(["Clicked on cell:",a,d]),b.isYourTurn)try{var g={row:a,col:d},h=f.createMove(b.boardbeforeMove,b.board,g,b.captured,b.passes,b.turnIndex);b.boardbeforeMove=b.board,b.isYourTurn=!1,e.makeMove(h)}catch(i){return void c.info(["Cannot make move:",a,d])}}g.setWidthToHeight(.8);var p=new Audio("audio/move.wav");p.load(),b.numberOfRowsAndCols=9,b.boardSrc="img/board.png","?boardSize=9"===window.location.search&&(b.numberOfRowsAndCols=9,b.boardSrc="img/board.png"),"?boardSize=19"===window.location.search&&(b.numberOfRowsAndCols=19,b.boardSrc="img/board_19x19_2.png"),"?boardSize=13"===window.location.search&&(b.numberOfRowsAndCols=13,b.boardSrc="img/board1313.png");var q=b.numberOfRowsAndCols,r=b.numberOfRowsAndCols;b.getIntegersTill=function(a){for(var b=[],c=0;a>c;c++)b.push(c);return b},window.handleDragEvent=h,n({stateAfterMove:{},turnIndexAfterMove:0,yourPlayerIndex:-2}),b.passClicked=function(){if(c.info(["Clicked on pass.",b.passes]),b.isYourTurn)try{var a={row:-1,col:-1},d=f.createMove(b.boardbeforeMove,b.board,a,b.captured,b.passes,b.turnIndex);b.boardbeforeMove=b.board,b.isYourTurn=!1,e.makeMove(d)}catch(g){return void c.info(["Cannot pass.",b.passes])}},b.shouldSlowlyAppear=function(a,c){return void 0!==b.delta&&b.delta.row===a&&b.delta.col===c},b.isEmpty=function(a,c){return void 0!==b.board[a][c]&&""===b.board[a][c]},b.onDropComplete=function(a,d,g,h){if(c.info("onDropComplete happened!",arguments),b.notifications="Dropped piece "+a+" in "+g+"x"+h,c.info(b.isYourTurn),!b.isYourTurn||2===a)return void(b.notifications="You can't use that piece.");try{var i={row:g,col:h},j=f.createMove(b.boardbeforeMove,b.board,i,b.captured,b.passes,b.turnIndex);b.boardbeforeMove=b.board,b.isYourTurn=!1,e.makeMove(j)}catch(k){return void c.info(["Cannot make move:",g,h])}},e.setGame({gameDeveloperEmail:"vangie.shue@gmail.com",minNumberOfPlayers:2,maxNumberOfPlayers:2,exampleGame:f.getExampleGame(),riddles:f.getRiddles(),isMoveOk:f.isMoveOk,updateUI:n})});
//# sourceMappingURL=everything.min.js.map