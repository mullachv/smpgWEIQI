var gameLogic;!function(a){function b(a,b){return angular.equals(a,b)}function c(){for(var a=q,b=q,c=[],d=[];b--;)d.push("");for(;a--;)c.push(d.slice());return c}function d(){return c()}function e(a){return JSON.parse(JSON.stringify(a))}function f(a,b,d,e){function f(b,c){g.push([b,c]),h[b][c]=a,b-1>=0&&""===h[b-1][c]&&e[b-1][c]===a&&f(b-1,c),q>b+1&&""===h[b+1][c]&&e[b+1][c]===a&&f(b+1,c),q>c+1&&""===h[b][c+1]&&e[b][c+1]===a&&f(b,c+1),c-1>=0&&""===h[b][c-1]&&e[b][c-1]===a&&f(b,c-1)}var g=[],h=c();return f(b,d),{willadd:g,links:h}}function g(a,b){var c,d,f=e(a);for(c=0;q>c;c++)for(d=0;q>d;d++)""!==b[c][d]&&(f[c][d]=b[c][d]);return f}function h(a){var b,d,h,i=c(),j=c(),k=[],l=[];for(b=0;q>b;b++)for(d=0;q>d;d++)"X"===a[b][d]&&""===i[b][d]?(h=f("X",b,d,a),k.push(e(h.willadd)),i=g(i,h.links)):"O"===a[b][d]&&""===j[b][d]&&(h=f("O",b,d,a),l.push(e(h.willadd)),j=g(j,h.links));return{black:k,white:l}}function i(a,b){var c,d,f,g=e(a);for(c=0;c<b.length;c++)d=b[c][0],f=b[c][1],g[d][f]="";return g}function j(a,b){var c,d,f,g=0,h=e(a),j=0;for(d=0;d<b.length;d++){for(j=0,c=b[d],f=0;f<c.length;f++){var k=c[f][0],l=c[f][1];if(k-1>=0&&""===a[k-1][l]||q>k+1&&""===a[k+1][l]||l-1>=0&&""===a[k][l-1]||q>l+1&&""===a[k][l+1]){j++;break}}0===j&&(g+=c.length,h=i(h,c))}return{board:h,captured:g}}function k(a,b,c){var d,f=e(b),g=e(a),i=h(a),k=i.black,l=i.white;return 0===c&&(d=j(g,l),f.white=b.white+d.captured,g=e(d.board)),d=j(g,k),f.black=b.black+d.captured,g=e(d.board),1===c&&(d=j(g,l),f.white=b.white+d.captured,g=e(d.board)),{board:g,captured:f}}function l(a){var b="O";return a.black-a.white===0?b="":a.white>a.black&&(b="X"),b}function m(a,b,c,d,e){var f,g,h,i,j,k=[];for(f=0;q>f;f++)for(g=0;q>g;g++){h={row:f,col:g};try{if(i=o(a,b,h,c,d,e),j=i[3].set.value,0===e&&j.white>c.white||1===e&&j.black>c.black)return i;0===e&&j.black>c.black||1===e&&j.white>c.white||k.push(i)}catch(l){}}try{h={row:-1,col:-1},i=o(a,b,h,c,d,e),k.push(i)}catch(l){}var m=k[Math.floor(Math.random()*k.length)];return m}function n(a,b){var c,d,e=0,f=b?"O":"X";for(c=0;q>c;c++)for(d=0;q>d;d++)a[c][d]===f&&e++;return e}function o(a,b,d,f,g,h){void 0===f&&(f={black:0,white:0}),void 0===g&&(g=0),void 0===b&&(b=c()),void 0===a&&(a=c());var i,j;i=n(b,h);var m=e(b),o=g,p=e(f),q=d.row,r=d.col;if(-1===q&&-1===r){if(o++,o>2)throw Error("Exceeded number of possible passes.")}else{if(""!==m[q][r])throw Error("Space is not empty!");m[q][r]=0===h?"X":"O",o=0;var s=k(m,f,h);m=s.board,p=s.captured}if(j=n(m,h),i>=j&&j>0&&0===g&&0===o)throw Error("you can not suicide.");if(angular.equals(a,m)&&0===g&&0===o)throw Error("donâ€™t allow a move that brings the game back to stateBeforeMove.");var t;if(2===o){var u=l(p);t={endMatch:{endMatchScores:"X"===u?[1,0]:"O"===u?[0,1]:[0,0]}}}else t={setTurn:{turnIndex:1-h}};return[t,{set:{key:"board",value:m}},{set:{key:"delta",value:d}},{set:{key:"captured",value:p}},{set:{key:"passes",value:o}}]}function p(a){var c=a.move,d=a.turnIndexBeforeMove,e=a.stateBeforeMove;try{var f=c[2].set.value,g=o(e.boardbeforeMove,e.board,f,e.captured,e.passes,d);if(!b(c,g))return!1}catch(h){return!1}return!0}var q=19;"?boardSize=9"===window.location.search&&(q=9),"?boardSize=19"===window.location.search&&(q=19),"?boardSize=13"===window.location.search&&(q=13),a.getInitialBoard=d,a.createComputerMove=m,a.createMove=o,a.isMoveOk=p}(gameLogic||(gameLogic={}));var game;!function(a){function b(){resizeGameAreaService.setWidthToHeight(.8),gameService.setGame({minNumberOfPlayers:2,maxNumberOfPlayers:2,isMoveOk:gameLogic.isMoveOk,updateUI:i}),dragAndDropService.addDragListener("boardArea",c),i({stateAfterMove:{},turnIndexAfterMove:0,yourPlayerIndex:-2})}function c(b,c,e){if(2!==n&&!q){var h=document.getElementById("draggingLines"),i=document.getElementById("horizontalDraggingLine"),j=document.getElementById("verticalDraggingLine");r=document.getElementById("clickToDragPiece");var k=document.getElementById("gameArea"),l=document.getElementById("boardArea"),m=c-k.offsetLeft,o=e-k.offsetTop;document.getElementById("button");if(0>m||m>=k.clientWidth||0>o||o>=l.clientHeight)return h.style.display="none",void(r.style.display="none");var s=Math.floor(w*m/l.clientWidth),t=Math.floor(v*o/l.clientHeight);if("X"!==a.board[t][s]&&"O"!==a.board[t][s]){r.style.display="inline",h.style.display="inline";var u=f(t,s);j.setAttribute("x1",""+u.x),j.setAttribute("x2",""+u.x),i.setAttribute("y1",""+u.y),i.setAttribute("y2",""+u.y);var x=d(t,s),y=document.getElementById("circle");y.setAttribute("fill",0===p?"black":"white"),r.style.left=x.left+"px",r.style.top=x.top+"px",("touchend"===b||"touchcancel"===b||"touchleave"===b||"mouseup"===b)&&(r.style.display="none",h.style.display="none",g(t,s))}}}function d(a,b){var c=e();return{top:a*c.height,left:b*c.width}}function e(){var a=document.getElementById("boardArea");return{width:a.clientWidth/w,height:a.clientHeight/v}}function f(a,b){var c=e();return{x:b*c.width+c.width/2,y:a*c.height+c.height/2}}function g(a,b){$rootScope.$apply(function(){var c="Dragged to "+a+"x"+b;console.log(c),u=c,j(a,b)})}function h(){gameService.makeMove(gameLogic.createComputerMove(s,a.board,m,n,p))}function i(b){return k=angular.toJson(b.stateAfterMove,!0),a.board=b.stateAfterMove.board,l=b.stateAfterMove.delta,m=b.stateAfterMove.captured,n=b.stateAfterMove.passes,(void 0===a.board||void 0===m||void 0===n)&&(a.board=gameLogic.getInitialBoard(),m={black:0,white:0},n=0,o="Nothing was dragged"),t=b.turnIndexAfterMove>=0&&b.yourPlayerIndex===b.turnIndexAfterMove,p=b.turnIndexAfterMove,t&&""===b.playersInfo[b.yourPlayerIndex].playerId?(q=!0,void $timeout(h,1e3)):void(q=!1)}function j(b,c){if(console.log(["Clicked on cell:",b,c]),t)try{var d={row:b,col:c},e=gameLogic.createMove(s,a.board,d,m,n,p);s=a.board,t=!1,gameService.makeMove(e)}catch(f){return void console.log(["Cannot make move:",b,c])}}var k=null;a.board=null;var l,m,n,o,p,q,r,s,t,u;a.numberOfRowsAndCols=19,a.boardSrc="imgs/board_19x19_2.png";var v=a.numberOfRowsAndCols,w=a.numberOfRowsAndCols;a.init=b,a.getButtonValue=function(){switch(n){case 0:return"PASS";case 1:return"END_MATCH";case 2:return"GAME_OVER";default:return"PASS"}},a.hidePassButton=function(){return q},"?boardSize=9"===window.location.search&&(a.numberOfRowsAndCols=9,a.boardSrc="imgs/board.png"),"?boardSize=19"===window.location.search&&(a.numberOfRowsAndCols=19,a.boardSrc="imgs/board_19x19_2.png"),"?boardSize=13"===window.location.search&&(a.numberOfRowsAndCols=13,a.boardSrc="imgs/board1313.png"),a.getIntegersTill=function(a){for(var b=[],c=0;a>c;c++)b.push(c);return b},a.passClicked=function(){if(console.log(["Clicked on pass.",n]),t)try{var b={row:-1,col:-1},c=gameLogic.createMove(s,a.board,b,m,n,p);s=a.board,t=!1,gameService.makeMove(c)}catch(d){return void console.log(["Cannot pass.",n])}},a.shouldSlowlyAppear=function(a,b){return void 0!==l&&l.row===a&&l.col===b},a.isEmpty=function(b,c){return void 0!==a.board[b][c]&&""===a.board[b][c]},a.onDropComplete=function(b,c,d,e){if(console.log("onDropComplete happened!",arguments),o="Dropped piece "+b+" in "+d+"x"+e,console.log(t),!t||2===b)return void(o="You can't use that piece.");try{var f={row:d,col:e},g=gameLogic.createMove(s,a.board,f,m,n,p);s=a.board,t=!1,gameService.makeMove(g)}catch(h){return void console.log(["Cannot make move:",d,e])}}}(game||(game={})),angular.module("myApp",["ngTouch","ui.bootstrap","gameServices"]).run(function(){$rootScope.game=game,translate.setLanguage("en",{RULES_OF_GO:"New to GO?",RULES_SLIDE1:"There are essentially only two rules in GO",RULES_SLIDE2:'Rule 1 (the rule of liberty) states that every stone remaining on the board must have at least one open "point" (an intersection, called a "liberty") directly next to it (up, down, left, or right)',RULES_SLIDE3:"Stones or groups of stones which lose their last liberty are removed from the board.",RULES_SLIDE4:'Rule 2 (the "ko rule") states that the stones on the board must never repeat a previous position of stones. Moves which would do so are forbidden, and thus only moves elsewhere on the board are permitted that turn.',PASS:"PASS",END_MATCH:"END MATCH",GAME_OVER:"GAME OVER",CLOSE:"Close"}),game.init()});
//# sourceMappingURL=everything.min.js.map