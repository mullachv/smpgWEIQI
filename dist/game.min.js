"use strict";angular.module("myApp",["ngDraggable"]).controller("Ctrl",function(a,b,c,d,e,f,g){function h(a,c,d){var e=document.getElementById("draggingLines"),f=document.getElementById("horizontalDraggingLine"),g=document.getElementById("verticalDraggingLine"),h=document.getElementById("gameArea"),j=document.getElementById("boardArea"),m=c-h.offsetLeft,n=d-h.offsetTop,o=document.getElementById("button");if(console.log(o),m>o.offsetLeft&&m<o.offsetLeft+o.clientWidth&&n>o.offsetTop&&n<o.offsetTop+o.clientHeight)return void(("touchend"===a||"touchcancel"===a||"touchleave"===a||"mouseup"===a)&&b.passClicked());if(0>m||m>=h.clientWidth||0>n||n>=j.clientHeight)return e.style.displagy="none",void(clickToDragPiece.style.display="none");var p=Math.floor(r*m/j.clientWidth),s=Math.floor(q*n/j.clientHeight);if("X"!==b.board[s][p]&&"O"!==b.board[s][p]){clickToDragPiece.style.display="inline",e.style.display="inline";var t=k(s,p);g.setAttribute("x1",t.x),g.setAttribute("x2",t.x),f.setAttribute("y1",t.y),f.setAttribute("y2",t.y);var u=i(s,p),v=document.getElementById("circle");v.setAttribute("fill",0===b.turnIndex?"black":"white"),clickToDragPiece.style.left=u.left+"px",clickToDragPiece.style.top=u.top+"px",("touchend"===a||"touchcancel"===a||"touchleave"===a||"mouseup"===a)&&(clickToDragPiece.style.display="none",e.style.display="none",l(s,p))}}function i(a,b){var c=j();return{top:a*c.height,left:b*c.width}}function j(){var a=document.getElementById("boardArea");return{width:a.clientWidth/r,height:a.clientHeight/q}}function k(a,b){var c=j();return{x:b*c.width+c.width/2,y:a*c.height+c.height/2}}function l(d,e){a.$apply(function(){var a="Dragged to "+d+"x"+e;c.info(a),b.msg=a,o(d,e)})}function m(){e.makeMove(f.createComputerMove(b.boardbeforeMove,b.board,b.captured,b.passes,b.turnIndex))}function n(a){b.jsonState=angular.toJson(a.stateAfterMove,!0),b.board=a.stateAfterMove.board,b.delta=a.stateAfterMove.delta,b.captured=a.stateAfterMove.captured,b.passes=a.stateAfterMove.passes,void 0===b.board||void 0===b.captured||void 0===b.passes?(b.board=f.getInitialBoard(),b.captured={black:0,white:0},b.passes=0,b.notifications="Nothing was dragged"):p.play(),b.isYourTurn=a.turnIndexAfterMove>=0&&a.yourPlayerIndex===a.turnIndexAfterMove,b.turnIndex=a.turnIndexAfterMove,b.isYourTurn&&""===a.playersInfo[a.yourPlayerIndex].playerId&&d(m,1e3)}function o(a,d){if(c.info(["Clicked on cell:",a,d]),b.isYourTurn)try{var g={row:a,col:d},h=f.createMove(b.boardbeforeMove,b.board,g,b.captured,b.passes,b.turnIndex);b.boardbeforeMove=b.board,b.isYourTurn=!1,e.makeMove(h)}catch(i){return void c.info(["Cannot make move:",a,d])}}g.setWidthToHeight(.8);var p=new Audio("audio/move.wav");p.load(),b.numberOfRowsAndCols=9,b.boardSrc="img/board.png","?boardSize=9"===window.location.search&&(b.numberOfRowsAndCols=9,b.boardSrc="img/board.png"),"?boardSize=19"===window.location.search&&(b.numberOfRowsAndCols=19,b.boardSrc="img/board_19x19_2.png"),"?boardSize=13"===window.location.search&&(b.numberOfRowsAndCols=13,b.boardSrc="img/board1313.png");var q=b.numberOfRowsAndCols,r=b.numberOfRowsAndCols;b.getIntegersTill=function(a){for(var b=[],c=0;a>c;c++)b.push(c);return b},window.handleDragEvent=h,n({stateAfterMove:{},turnIndexAfterMove:0,yourPlayerIndex:-2}),b.passClicked=function(){if(c.info(["Clicked on pass.",b.passes]),b.isYourTurn)try{var a={row:-1,col:-1},d=f.createMove(b.boardbeforeMove,b.board,a,b.captured,b.passes,b.turnIndex);b.boardbeforeMove=b.board,b.isYourTurn=!1,e.makeMove(d)}catch(g){return void c.info(["Cannot pass.",b.passes])}},b.shouldSlowlyAppear=function(a,c){return void 0!==b.delta&&b.delta.row===a&&b.delta.col===c},b.isEmpty=function(a,c){return void 0!==b.board[a][c]&&""===b.board[a][c]},b.onDropComplete=function(a,d,g,h){if(c.info("onDropComplete happened!",arguments),b.notifications="Dropped piece "+a+" in "+g+"x"+h,c.info(b.isYourTurn),!b.isYourTurn||2===a)return void(b.notifications="You can't use that piece.");try{var i={row:g,col:h},j=f.createMove(b.boardbeforeMove,b.board,i,b.captured,b.passes,b.turnIndex);b.boardbeforeMove=b.board,b.isYourTurn=!1,e.makeMove(j)}catch(k){return void c.info(["Cannot make move:",g,h])}},e.setGame({gameDeveloperEmail:"vangie.shue@gmail.com",minNumberOfPlayers:2,maxNumberOfPlayers:2,exampleGame:f.getExampleGame(),riddles:f.getRiddles(),isMoveOk:f.isMoveOk,updateUI:n})});
//# sourceMappingURL=game.min.js.map